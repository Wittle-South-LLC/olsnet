# Test API for Connexion
swagger: '2.0'
#host: server:5000
basePath: /api/v1
schemes:
  - http

# Document metadata
info:
  version: "0.0.2"
  title: Test API Spec

# API Paths
paths:
  # This is a user creation endpoint.
  /users:
    post:
      summary: Create a user
      tags:
        - Users
      parameters:
        - name: user
          in: body
          schema:
            $ref: '#/definitions/createUser'
      responses:
        201:
          description: User successfully added
          schema:
            type: object
            title: UserID
            properties:
              user_id:
                type: string
        409:
          description: One or more user fields that should be unique are duplicated
    get:
      summary: Get a list of users
      tags:
        - Users
      responses:
        200:
          description: List of users found
          schema:
            type: array
            items:
              $ref: '#/definitions/User'
      security:
        - main: []
  /users/{username}:
    parameters:
      - name: username
        description: Username for the user, 4 to 32 characters in length
        in: path
        type: string
        required: true
        minLength: 4
        maxLength: 32
    get:
      summary: Get information for a user by username
      tags:
        - Users
      responses:
        200:
          description: User updated successfully
          schema:
            $ref: '#/definitions/loginUser'
        404:
          description: User not found
    put:
      summary: Update a user by username
      tags:
        - Users
      parameters:
        - name: user
          in: body
          required: true
          schema:
            $ref: '#/definitions/updateUser'
      responses:
        200:
          description: User updated successfully
        404:
          description: User not found
    delete:
      summary: Delete a user by username
      tags:
        - Users
      responses:
        204:
          description: User deleted successfully
        404:
          description: User not found
      security:
        - main: []
  # This is a login endpoint.
  /login:
    post:
      summary:
        Authenticate via JWT or Facebook and hydrate the app
      tags:
        - Authentication
      description: |
        Authenticate users to the application with either username and password in POST data, or Facebook access_token in post data.
        Returns both an HTTP-only cookie and an authentication token
      parameters:
        - name: login_data
          in: body
          schema:
            $ref: '#/definitions/Login'
      responses:
        200:
          description: Successful response
          schema:
            $ref: '#/definitions/loginUser'
        404:
          description: Invalid user or password
    get:
      summary:
        Hydrate the app for an already authenticated user
      tags:
        - Authentication
      description: |
        Requires the user to already be authenticated.
        Provides all of the user metadata that would be delivered for a new login
      responses:
        200:
          description: Successful response
          schema:
            $ref: '#/definitions/loginUser'
        401:
          description: User not authenticated
      security:
        - main: []
  /logout:
    post:
      summary:
        Remove authentication and exit the application
      tags:
        - Authentication
      description: |
        Ending authentication for a user requires removing a non-expiring token.
        This method will clear the JWT tokens for the application
      responses:
        200:
          description: Successful response
        400:
          description: User not logged in
      security:
        - main: []
  # API to shut down the server
  /shutdown:
    post:
      description: |
        Allows for clean server shutdown.
      tags:
        - Test Utilities
      parameters:
        - name: key
          description: Unique application key to allow shutdown
          in: body
          schema:
            type: object
            title: ShutdownKey
            properties:
              key:
                type: string
      responses:
        200:
          description: Server successfully shut down
        404:
          description: User not authorized to shut down server

securityDefinitions:
  main:
    type: apiKey
    description: User access key in cookie and CSRF key in header
    name: X-CSRF-TOKEN
    in: header

definitions:
  Login:
    type: object
    properties:
      username:
        type: string
        description: Login user name
        minLength: 4
        maxLength: 32
      password:
        type: string
        description: Password
        minLength: 4
        maxLength: 32
      access_token:
        type: string
        description: Access Token generated by Facebook authentication APIs
  User:
    type: object
    required:
      - username
      - email
      - phone
    properties:
      user_id:
        type: string
        description: Unique Identifier
        readOnly: true
      username:
        type: string
        description: Login user name
        minLength: 4
        maxLength: 32
      email:
        type: string
        description: Email address
        minLength: 4
        maxLength: 80
      phone:
        type: string
        description: Phone number
        minLength: 10
        maxLength: 20
      preferences:
        description: User Preferences
        type: object
      roles:
        description: User Roles
        type: string
  createUser:
    allOf:
      - $ref: '#/definitions/User'
      - type: object
        required:
          - password
          - reCaptchaResponse
        properties:
          password:
            type: string
            description: User password
            minLength: 8
            maxLength: 32
          reCaptchaResponse:
            type: string
            description: ReCaptcha Token for validation
            minLength: 4
            maxLength: 800
  loginUser:
    allOf:
      - $ref: '#/definitions/User'
      - type: object
        properties:
          token:
            type: string
            description: Access token with expiration date
  updateUser:
    allOf:
      - $ref: '#/definitions/User'
      - type: object
        properties:
          password:
            type: string
            description: User password (changing user data requires re-entry of password)
            minLength: 8
            maxLength: 32
          newPassword:
            type: string
            description: New password

tags:
  - name: Authentication
    description: APIs associated with application authentication
  - name: Users
    description: APIs associated with CRUD for users
  - name: Test Utilitities
    description: APIs that should only be used by test utilities
